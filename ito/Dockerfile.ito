# Set up an Ansible Controller with DebOps support as a Docker container
#
# Copyright (C) 2017-2019 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2017-2019 DebOps project https://debops.org/


# Basic usage:
#
#     docker build -t debops .
#     docker run --name <container> -h controller.example.org -i -t debops
#
#     cd src/controller
#     debops common --diff


FROM debian:buster-slim

LABEL maintainer="Nick Patel <nick@rads.io>" \
      maintainer="Maciej Delmanowski <drybjed@gmail.com>" \
      project="DebOps" homepage="https://debops.org/"

ENV DEBIAN_FRONTEND noninteractive
#ENV PIP_PACKAGES "ansible cryptography yamllint ansible-lint flake8 testinfra molecule molecule[docker] nose2"

# Install dependencies.
RUN apt-get -q update \
    && apt-get install -yq --no-install-recommends \
       sudo systemd \
       build-essential wget libffi-dev libssl-dev \
       iproute2 \
       levee \
       openssh-client \
       python3-apt \
       python3-distro \
       python3-dnspython \
       python3-future \
       python3-ldap \
       python3-openssl \
       python3-pip \
       python3-wheel \
       python3-dev \
       python3-setuptools \
       procps \
       tree \
       gosu \
       git \
       python 

RUN echo "Cleaning up cache directories..." \
    && rm -rf /var/lib/apt/lists/* \
    && rm -Rf /usr/share/doc && rm -Rf /usr/share/man \
    && rm -rf /var/cache/apt/archives/*.deb \
    && rm -rf /root/.cache/* \
    && apt-get clean

# Install Ansible via pip.
#RUN wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py \
#    && chmod +x /tmp/get-pip.py \
#    && /tmp/get-pip.py \

#RUN pip3 install "${PIP_PACKAGES}" \
#RUN pip3 install ansible ansible-lint yamllint flake8 testinfra molecule cryptography \
RUN pip3 install ansible ansible-lint yamllint flake8 testinfra cryptography nose2 \
    && pip3 install ansible[azure] \
    && pip3 install debops[ansible]

# use molecule package from github (modified for debian:10-slim)
RUN pip3 install -U git+https://github.com/ito-devops/molecule \
    && pip3 install -U git+https://github.com/ito-devops/molecule#egg=docker


RUN groupadd --system admins \
    && echo "%admins ALL = (ALL:ALL) NOPASSWD: SETENV: ALL" > /etc/sudoers.d/admins \
    && chmod 0440 /etc/sudoers.d/admins \
    && useradd --user-group --create-home --shell /bin/bash \
       --home-dir /home/ansible --groups admins ansible

COPY initctl_faker .
RUN chmod +x initctl_faker \
    && rm -fr /sbin/initctl \
    && ln -s /initctl_faker /sbin/initctl

# Install Ansible inventory file.
RUN mkdir -p /etc/ansible \
    && printf "[local]\nlocalhost ansible_connection=local" > /etc/ansible/hosts

# Add contents of the DebOps monorepo to the container
WORKDIR /home/ansible
#COPY . /home/ansible/.local/share/debops/debops
RUN git clone https://github.com/ito-devops/debops.git /home/ansible/debops \
    && chown -R ansible:ansible /home/ansible

# Switch to the unprivileged user
USER ansible

# Docker does not set expected environment variables by default
# Ref: https://stackoverflow.com/questions/54411218/
#ENV USER ansible


#ENTRYPOINT ["/home/ansible/.local/share/debops/debops/lib/docker/docker-entrypoint"]
RUN /home/ansible/debops/lib/docker/docker-entrypoint
VOLUME ["/sys/fs/cgroup"]

# If you use systemd, container acts like an executable? Need to run it in detached mode
# docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro --volume=`pwd`:/etc/ansible/roles/debops.auth:ro --name ansible-docker ito-devops/docker-debian10-ansible:latest
# To execute: 
# docker exec ansible-docker ansible --version
# docker exec --tty [container_id] env TERM=xterm ansible --version 
# docker exec --tty [container_id] env TERM=xterm ansible-playbook /playbookpath/main.yml --syntax-check
#
CMD ["/lib/systemd/systemd"]
#CMD ["/bin/bash"]
